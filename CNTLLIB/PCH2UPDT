/* REXX - Convert PUNCH output to IEBUPTE input */
/* Version 0.1 */
/*---------------------------------------------------------------
 * Copyright (c) 2015 Ze'ev Atlas
 * Please refer to the LICENSE document to see all other
 * applicable copyrights.
 *
 *---------------------------------------------------------------
 *Redistribution and use in source and binary forms, with or
 *without modification, are permitted provided that the following
 *conditions are met:

 * 1. Redistributions of source code must retain the above
 * copyright notice, this list of conditions and the following
 * disclaimer.

 * 2. Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following
 * disclaimer in the documentation and/or other materials
 * provided with the distribution.

 * 3. Neither the name of the University of Cambridge nor the
 * names of its contributors may be used to endorse or promote
 * products derived from this software without specific prior
 * written permission.

 *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 *CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *-------------------------------------------------------------*/
  MAIN:
   /* usage: Rexx addmem input-file-name output-lib-name*/
   PARSE ARG ifile ofile .
     say "PCH2UPDT-001 ocnvert punch file" ifile "to IEBUPDTE" ofile
     Call A01_OPEN_FILES
     Call B01_INITIALISATION
     Call C01_PROCESS
     Call D01_TERMINATION
     Call EXITCMD

     Return

  A01_OPEN_FILES:
     /*say ": ALLOC FI(SYSUT1) DSN (" ifile ") SHR"*/
     "ALLOC FI(SYSUT1) DSN (" ifile ") SHR"
     /* check for RC */
     IF RC \= 0 THEN
        call DIE 'alloc input failed' RC
     "execio 1 diskr SYSUT1 ("
     /* check for RC */
     if RC = 2 then
     do
        say "PCH2UPDT-002 EMPTY input file"
        Final_RC = RC
        call EXITCMD
     end
     IF RC \= 0 THEN
        call DIE 'open input failed' RC
     openfile = 1
     parse pull iline

     /*say ": ALLOC FI(SYSUT2) DSN (" ofile ") OLD"*/
     "ALLOC FI(SYSUT2) DSN (" ofile ") OLD"
     /* check for RC */
     IF RC \= 0 THEN
        call DIE 'alloc output failed' RC

     return

 B01_INITIALISATION:

    Final_RC = 0

    Return

 EXITCMD:
    /* To show the return code when running in ispf */
    If Final_RC = 0 Then
       Do
         Say "PCH2UPDT-005 Successful Completition " || RC
       End
    Else
       Say "PCH2UPDT-006 Unsuccessful Completition " || RC
    Exit Final_RC

   Return

 C01_PROCESS:
    do forever
       if substr(iline, 1, 14) = 'VMEMBER NAME  ' then
       do
          membername = substr(iline, 15, 8)
          outline = './ REPL NAME=' || membername
          PUSH outline
          "EXECIO * DISKW SYSUT2 "
             IF RC \= 0 THEN
        call DIE 'write output failed for command ' || membername RC
       end
       else
       do
           outline = substr(iline,2,80)
           PUSH outline
           "EXECIO * DISKW SYSUT2 "
              IF RC \= 0 THEN
        call DIE 'write output failed for member ' || membername RC
       end
       "execio 1 diskr SYSUT1 "
       /*if eof leave*/
       if RC = 2 then
          leave
       /* check for RC */
       IF RC \= 0 THEN
             call DIE 'read input failed' RC
       parse pull iline
    end

    Return

 D01_Termination:
   if openfile = 1 then
   do
      "execio 0 diskw SYSUT2 (finis"
      /* check for RC */
      IF RC \= 0 THEN
               call DIE 'close output failed ' || RC
      "FREE DDNAME(SYSUT2)"
      IF RC \= 0 THEN
               call DIE 'free output failed for member ' || RC
      openfile = 0
   end
   "execio 0 diskr SYSUT1 (finis"
   IF RC \= 0 THEN
               call DIE 'close input failed' RC
   /* check for RC */
    "FREE DDNAME(SYSUT1)"
    IF RC \= 0 THEN
               call DIE 'free input failed' RC
    final_RC=0

   Return

DIE:
   parse arg msg vrc .
   say "PCH2UPDT-003 " || msg vrc

   final_RC = vrc
   call EXITCMD

   return
